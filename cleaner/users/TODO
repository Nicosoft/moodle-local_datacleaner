
Ok lets say we have 10,000 users and we want to scramble them all

End state: 1000 unique but randomly named users
Ideally if you run the process twice you will end up with the same or similar list of names


Proposed algorithm:

* Find out how many X users there are
* root X (eg root(10000) = 100
* Find the next 2 biggest prime numbers after root(X), eg 101 and 103


* Create a table with id, firstname, lastname
* Grind through the existing list of users and build up an in memory array of 101 unique first names and 103 last names
* order the names by alpha (deterministic and mixes from original id)
* as save these into the new table



* now we can set in a single SQL statement everysingle users name to something unique because of the 2 prime numbers
and the module below we are guaranteed to have 101 x 103 = 10403 unique names


really rough pseudo sql:


UPDATE
{users} u
JOIN {temp} as first ON u.id % 101 = first.id
JOIN {temp} as last  ON u.id % 103 = last.id

SET
u.firstname = first.firstname
u.lasttname = last.lastname


We also need to strip out the other alternate name fields


